// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum UserRole {
  superadmin
  admin
  user
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?  // Added password field for SuperAdmin
  avatar    String?
  provider  String   // google, github, email
  role      UserRole @default(user)
  isActive  Boolean  @default(true)
  progress  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  submissions Submission[]
  userProgress UserProgress[]

  @@map("users")
}

model Problem {
  id          String   @id @default(cuid())
  title       String   @unique
  description String
  difficulty  String
  category    String
  testCases   String   // JSON string
  solution    String?
  hints       String?  // JSON string
  tags        String?  // JSON string
  companies   String?  // JSON string
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  submissions Submission[]
  userProgress UserProgress[]

  @@map("problems")
}

model MCQQuestion {
  id            String   @id @default(cuid())
  question      String   @unique
  options       String   // JSON string
  correctAnswer Int
  explanation   String?
  category      String
  difficulty    String
  tags          String?  // JSON string
  companies     String?  // JSON string
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  userProgress UserProgress[]

  @@map("mcq_questions")
}

model Submission {
  id        String   @id @default(cuid())
  userId    String
  problemId String
  code      String
  language  String
  status    String   // accepted, wrong_answer, time_limit, runtime_error
  score     Int
  runtime   Int?     // in milliseconds
  memory    Int?     // in MB
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  problem Problem @relation(fields: [problemId], references: [id])

  @@map("submissions")
}

model UserProgress {
  id           String   @id @default(cuid())
  userId       String
  problemId    String?
  questionId   String?
  questionType String   // coding, mcq
  status       String   // not_started, in_progress, completed, failed
  score        Int      @default(0)
  startedAt    DateTime @default(now())
  completedAt  DateTime?
  updatedAt    DateTime @updatedAt

  user    User       @relation(fields: [userId], references: [id])
  problem Problem?   @relation(fields: [problemId], references: [id])
  question MCQQuestion? @relation(fields: [questionId], references: [id])

  @@map("user_progress")
}
